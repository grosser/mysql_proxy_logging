#!/usr/bin/env ruby
STDOUT.sync=true
require 'rubygems'
require 'active_record'

logfile = ARGV[0]
dir = ARGV[1]
times = (ARGV[2] || 1).to_i
sleep_time = (ARGV[3] || 0).to_f

def connect(dir)
  config = YAML.load(File.read("#{dir}/config/database.yml"))['staging']
  ActiveRecord::Base.establish_connection(config.merge(:port=>3306))
end

def replay(logfile)
  #2010-01-13 11:06:16    443 -- SELECT version FROM schema_migrations\n
  sql = File.read(logfile).split(/^\d\d\d\d-\d\d-\d\d \d\d:\d\d:\d\d\s+\d+ -- /m).reject(&:empty?)

  puts "replaying #{sql.size} lines of sql ..."

  sql.each do |line|
    ActiveRecord::Base.connection.execute(line) rescue puts("corrupt line #{line}")
  end
end

connect(dir)
time = 0.0
times.times do
  current = Benchmark.realtime do
    replay(logfile)
  end
  time += current
  sleep sleep_time
  puts "#{current} seconds (total: #{time})"
end
